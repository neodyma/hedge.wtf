/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  publicKey as publicKeySerializer,
  struct,
  u128,
  u64,
} from '@metaplex-foundation/umi/serializers';

export type LiquidationExecuted = {
  liquidator: PublicKey;
  target: PublicKey;
  borrowMint: PublicKey;
  collateralMint: PublicKey;
  repayAmount: bigint;
  collateralAmount: bigint;
  healthBefore: bigint;
};

export type LiquidationExecutedArgs = {
  liquidator: PublicKey;
  target: PublicKey;
  borrowMint: PublicKey;
  collateralMint: PublicKey;
  repayAmount: number | bigint;
  collateralAmount: number | bigint;
  healthBefore: number | bigint;
};

export function getLiquidationExecutedSerializer(): Serializer<
  LiquidationExecutedArgs,
  LiquidationExecuted
> {
  return struct<LiquidationExecuted>(
    [
      ['liquidator', publicKeySerializer()],
      ['target', publicKeySerializer()],
      ['borrowMint', publicKeySerializer()],
      ['collateralMint', publicKeySerializer()],
      ['repayAmount', u64()],
      ['collateralAmount', u64()],
      ['healthBefore', u128()],
    ],
    { description: 'LiquidationExecuted' }
  ) as Serializer<LiquidationExecutedArgs, LiquidationExecuted>;
}

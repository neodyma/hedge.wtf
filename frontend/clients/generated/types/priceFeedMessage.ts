/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  Serializer,
  bytes,
  i32,
  i64,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';

export type PriceFeedMessage = {
  /** `FeedId` but avoid the type alias because of compatibility issues with Anchor's `idl-build` feature. */
  feedId: Uint8Array;
  price: bigint;
  conf: bigint;
  exponent: number;
  /** The timestamp of this price update in seconds */
  publishTime: bigint;
  /**
   * The timestamp of the previous price update. This field is intended to allow users to
   * identify the single unique price update for any moment in time:
   * for any time t, the unique update is the one such that prev_publish_time < t <= publish_time.
   *
   * Note that there may not be such an update while we are migrating to the new message-sending logic,
   * as some price updates on pythnet may not be sent to other chains (because the message-sending
   * logic may not have triggered). We can solve this problem by making the message-sending mandatory
   * (which we can do once publishers have migrated over).
   *
   * Additionally, this field may be equal to publish_time if the message is sent on a slot where
   * where the aggregation was unsuccesful. This problem will go away once all publishers have
   * migrated over to a recent version of pyth-agent.
   */
  prevPublishTime: bigint;
  emaPrice: bigint;
  emaConf: bigint;
};

export type PriceFeedMessageArgs = {
  /** `FeedId` but avoid the type alias because of compatibility issues with Anchor's `idl-build` feature. */
  feedId: Uint8Array;
  price: number | bigint;
  conf: number | bigint;
  exponent: number;
  /** The timestamp of this price update in seconds */
  publishTime: number | bigint;
  /**
   * The timestamp of the previous price update. This field is intended to allow users to
   * identify the single unique price update for any moment in time:
   * for any time t, the unique update is the one such that prev_publish_time < t <= publish_time.
   *
   * Note that there may not be such an update while we are migrating to the new message-sending logic,
   * as some price updates on pythnet may not be sent to other chains (because the message-sending
   * logic may not have triggered). We can solve this problem by making the message-sending mandatory
   * (which we can do once publishers have migrated over).
   *
   * Additionally, this field may be equal to publish_time if the message is sent on a slot where
   * where the aggregation was unsuccesful. This problem will go away once all publishers have
   * migrated over to a recent version of pyth-agent.
   */
  prevPublishTime: number | bigint;
  emaPrice: number | bigint;
  emaConf: number | bigint;
};

export function getPriceFeedMessageSerializer(): Serializer<
  PriceFeedMessageArgs,
  PriceFeedMessage
> {
  return struct<PriceFeedMessage>(
    [
      ['feedId', bytes({ size: 32 })],
      ['price', i64()],
      ['conf', u64()],
      ['exponent', i32()],
      ['publishTime', i64()],
      ['prevPublishTime', i64()],
      ['emaPrice', i64()],
      ['emaConf', u64()],
    ],
    { description: 'PriceFeedMessage' }
  ) as Serializer<PriceFeedMessageArgs, PriceFeedMessage>;
}
